"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[78],{3905:(e,r,n)=>{n.d(r,{Zo:()=>u,kt:()=>v});var t=n(7294);function a(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function o(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function l(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?o(Object(n),!0).forEach((function(r){a(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function i(e,r){if(null==e)return{};var n,t,a=function(e,r){if(null==e)return{};var n,t,a={},o=Object.keys(e);for(t=0;t<o.length;t++)n=o[t],r.indexOf(n)>=0||(a[n]=e[n]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)n=o[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=t.createContext({}),c=function(e){var r=t.useContext(s),n=r;return e&&(n="function"==typeof e?e(r):l(l({},r),e)),n},u=function(e){var r=c(e.components);return t.createElement(s.Provider,{value:r},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},f=t.forwardRef((function(e,r){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=c(n),f=a,v=p["".concat(s,".").concat(f)]||p[f]||d[f]||o;return n?t.createElement(v,l(l({ref:r},u),{},{components:n})):t.createElement(v,l({ref:r},u))}));function v(e,r){var n=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=f;var i={};for(var s in r)hasOwnProperty.call(r,s)&&(i[s]=r[s]);i.originalType=e,i[p]="string"==typeof e?e:a,l[1]=i;for(var c=2;c<o;c++)l[c]=n[c];return t.createElement.apply(null,l)}return t.createElement.apply(null,n)}f.displayName="MDXCreateElement"},5982:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>s,contentTitle:()=>l,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var t=n(7462),a=(n(7294),n(3905));const o={sidebar_label:"On Audio Level Changed",title:"On Audio Level Changed"},l=void 0,i={unversionedId:"blueprints/Events/on-audio-level-changed",id:"blueprints/Events/on-audio-level-changed",title:"On Audio Level Changed",description:"Triggered when there are new audio levels available after calling the Get Audio Levels function. The event provides two arrays: an array of IDs of the current speakers and an array of floating point numbers representing each participant's audio level. The order of levels corresponds to the order of ActiveSpeakers. A value of 0.0 represents silence and a value of 1.0 represents the maximum volume.",source:"@site/docs/blueprints/Events/on-audio-level-changed.md",sourceDirName:"blueprints/Events",slug:"/blueprints/Events/on-audio-level-changed",permalink:"/comms-sdk-unreal/docs/blueprints/Events/on-audio-level-changed",draft:!1,tags:[],version:"current",frontMatter:{sidebar_label:"On Audio Level Changed",title:"On Audio Level Changed"},sidebar:"tutorialSidebar",previous:{title:"On Active Speaker Changed",permalink:"/comms-sdk-unreal/docs/blueprints/Events/on-active-speaker-changed"},next:{title:"On Connected",permalink:"/comms-sdk-unreal/docs/blueprints/Events/on-connected"}},s={},c=[],u={toc:c};function p(e){let{components:r,...o}=e;return(0,a.kt)("wrapper",(0,t.Z)({},u,o,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Triggered when there are new audio levels available after calling the Get Audio Levels function. The event provides two arrays: an array of IDs of the current speakers and an array of floating point numbers representing each participant's audio level. The order of levels corresponds to the order of ActiveSpeakers. A value of 0.0 represents silence and a value of 1.0 represents the maximum volume."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Sample",src:n(4148).Z,width:"1058",height:"333"})))}p.isMDXComponent=!0},4148:(e,r,n)=>{n.d(r,{Z:()=>t});const t=n.p+"assets/images/on_audio_levels_changed-f1e478bf64a6c562f962133622c139c2.PNG"}}]);